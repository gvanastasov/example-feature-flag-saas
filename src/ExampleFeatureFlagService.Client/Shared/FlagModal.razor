@using ExampleFeatureFlagService.Client.Models

@if (ShowModal)
{
    <div class="modal-backdrop">
        <div class="modal" style="display: block">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLiveLabel">@(EditingFlag!.Id == 0 ? "Add Feature Flag" : "Edit Feature Flag")</h5>
                    </div>
                    <div class="modal-body">
                        <div class="form-group mb-2">
                            <label for="flagName">Name:</label>
                            <input type="text" id="flagName" class="form-control" @bind="EditingFlag.Name" />
                        </div>

                        <div class="form-group mb-2">
                            <label for="flagDescription">Description:</label>
                            <textarea id="flagDescription" class="form-control" @bind="EditingFlag.Description"></textarea>
                        </div>

                        <div class="form-group mb-2">
                            <label for="flagEnvironment">Environment:</label>
                            <input type="text" id="flagEnvironment" class="form-control" @bind="EditingFlag.Environment" />
                        </div>

                        <div class="form-group mb-2">
                            <label for="flagApplication">Application:</label>
                            <input type="text" id="flagApplication" class="form-control" @bind="EditingFlag.Application" />
                        </div>

                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="flagEnabled" @bind="EditingFlag.IsEnabled">
                            <label class="form-check-label" for="flagEnabled">Enabled</label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="CloseModal">Cancel</button>
                        <button type="button" class="btn btn-primary" @onclick="SaveFlag">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool ShowModal { get; set; }
    [Parameter] public FeatureFlag EditingFlag { get; set; } = new FeatureFlag();
    [Parameter] public EventCallback OnSave { get; set; }

    private void CloseModal() => ShowModal = false;
    private async Task SaveFlag() => await OnSave.InvokeAsync();
}